---
import { TOC } from "@/components/ui/toc"
import { type ToCHeadingType, type ToCHeadingsType } from "@/lib/types"

export type ToCHeadingTypeWithSubItems = ToCHeadingType & {
  subHeadings: ToCHeadingsType
}

interface Props {
  headings?: ToCHeadingsType
  class?: string
}

const { headings, class: className } = Astro.props

if (!headings || headings.length === 0 || headings.length === 1) return null

function buildToC(headings: ToCHeadingsType) {
  const toc: ToCHeadingsType = []
  const parentHeadings = new Map()

  headings.forEach((h: any) => {
    const heading = { ...h, subHeadings: [] }
    parentHeadings.set(heading.depth, heading)
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 2) {
      toc.push(heading)
    } else {
      parentHeadings.get(heading.depth - 1).subHeadings.push(heading)
    }
  })
  return toc
}

const toc = buildToC(headings)
---

<TOC client:load headings={headings} />
