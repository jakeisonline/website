---
import JsonLd from "@/components/blocks/json-ld.astro"
import ToC from "@/components/blocks/toc.astro"
import Category from "@/components/category.astro"
import { Like } from "@/components/ui/like"
import BaseLayout from "@/layouts/base-layout.astro"
import { SITE_CONFIG } from "@/lib/config"
import { type SEOOverride } from "@/lib/seo"
import { getFinalDirectory } from "@/lib/server-utils"
import { type ToCHeadingsType } from "@/lib/types"
import { Dot, Eye } from "lucide-react"

interface Props {
  frontmatter: Record<string, string>
  title?: string
  subtitle?: string
  publishedAt?: string
  url?: string
  headings?: ToCHeadingsType
}

const {
  frontmatter,
  headings,
  title = frontmatter?.title,
  subtitle = frontmatter?.subtitle,
  publishedAt = frontmatter?.publishedAt,
  url = Astro.url.pathname,
} = Astro.props

const articleId = getFinalDirectory(Astro.url.href)

const seo: SEOOverride = {
  openGraph: {
    basic: {
      type: "article",
      image: frontmatter?.coverImage
        ? `${SITE_CONFIG.siteUrl}${frontmatter?.coverImage}`
        : `${SITE_CONFIG.siteUrl}/og.png`,
    },
    article: {
      publishedTime: publishedAt,
      authors: ["Jake Holman (@jakeisonline)"],
    },
  },
  twitter: {
    card: "summary_large_image",
    image: frontmatter?.coverImage
      ? `${SITE_CONFIG.siteUrl}${frontmatter?.coverImage}`
      : `${SITE_CONFIG.siteUrl}/og.png`,
  },
  extend: {
    meta: [
      {
        name: "twitter:label1",
        content: "Written by",
      },
      {
        name: "twitter:data1",
        content: "Jake Holman (@jakeisonline)",
      },
      {
        name: "twitter:label2",
        content: "Reading time",
      },
      {
        name: "twitter:data2",
        content: `${frontmatter?.readingMinutes} min read`,
      },
    ],
  },
}
---

<BaseLayout title={title} description={frontmatter?.description} seo={seo}>
  <JsonLd
    slot="head"
    headline={title}
    alternativeHeadline={subtitle}
    description={frontmatter?.description}
    datePublished={publishedAt}
    wordCount={frontmatter?.readingWords}
    timeRequired={frontmatter?.readingMinutes}
  />
  <div class="grid-cols-full relative w-full lg:grid xl:grid-cols-[1fr_300px]">
    <div
      class="prose prose-h2:border-b prose-h2:pb-2 prose-headings:scroll-m-20 prose-headings:tracking-tight md:prose-h1:text-3xl prose-headings:text-balance prose-h1:text-3xl prose-h1:tracking-tight prose-h1:leading-8 prose-headings:font-bold prose-h1:mb-0 dark:prose-invert"
    >
      <h1>{title}</h1>
      {subtitle && <p class="mt-1 text-md text-muted-foreground">{subtitle}</p>}
      <div class="flex flex-row items-center gap-1 text-xs md:text-sm">
        {
          publishedAt && (
            <p class="mt-1 text-muted-foreground">
              <span class="sr-only md:not-sr-only">Published </span>
              <span class="text-foreground">
                {new Date(publishedAt).toLocaleDateString("en-US", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })}
              </span>
            </p>
          )
        }
        {
          !publishedAt && (
            <p class="mt-1 flex items-center gap-1">
              <Eye className="size-3.5" />
              Preview
            </p>
          )
        }
        {
          frontmatter?.readingMinutes && (
            <p class="mt-1 text-muted-foreground flex items-center gap-1">
              <Dot className="size-4" />
              {frontmatter?.readingMinutes} min{" "}
              <span class="sr-only md:not-sr-only">read</span>
            </p>
          )
        }
        <p class="text-muted-foreground mt-1 flex items-center gap-1 text-sm">
          <Dot className="size-4" />
          <Category category={frontmatter?.category} />
        </p>
      </div>
      <article class="mt-10 md:mt-16">
        <slot />
      </article>
    </div>
    <nav
      aria-labelledby="doc-outline-aria-label"
      class="sticky top-22 ml-4 hidden h-0 pl-3 text-sm xl:block"
    >
      <div>On this page</div>
      <ToC headings={headings} />
      <Like likeId={articleId} client:idle />
    </nav>
  </div>
</BaseLayout>
